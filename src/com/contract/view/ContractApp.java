package com.contract.view;

import com.contract.model.ContractModel;
import com.contract.util.ValidationUtil;
import com.contract.controller.algorithms.MergeSort;
import com.contract.controller.algorithms.SelectionSort;
import com.contract.controller.algorithms.InsertionSort;
import com.contract.controller.algorithms.BinarySearch;
import java.awt.Color;
import java.awt.Dimension;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prithivi
 */
public class ContractApp extends javax.swing.JFrame {

    private List<ContractModel> contractList;
    private java.awt.CardLayout cardLayout;
    private final ValidationUtil validationUtil;

    /**
     * Creates new form CollegeApp
     */
    public ContractApp() {
        initComponents();
        validationUtil = new ValidationUtil();
        initializeLayout(); // Set up CardLayout and add screens
        initializeData(); // Initialize student data and table
        startProgress(); // Show loading screen and initiate progress       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        pnlMainBar = new javax.swing.JPanel();
        lblMainBarSlogan = new javax.swing.JLabel();
        lblMainBarLogo = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        pnlSolution = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblHomeText1 = new javax.swing.JLabel();
        btnLearnMore1 = new javax.swing.JButton();
        pnlContractList = new javax.swing.JPanel();
        spTblContract = new javax.swing.JScrollPane();
        tblContract = new javax.swing.JTable();
        lblTblContractTitle = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        cmbType = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        txtContractId = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();
        txtTerm = new javax.swing.JTextField();
        lblError = new javax.swing.JLabel();
        txtDraftedBy = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        txtContactNo = new javax.swing.JTextField();
        cmbSortBy = new javax.swing.JComboBox<>();
        cmbSelectionSortingOrder = new javax.swing.JComboBox<>();
        btnSorting = new javax.swing.JButton();
        txtSearchValue = new javax.swing.JTextField();
        btnSearching = new javax.swing.JButton();
        pnlAboutUs = new javax.swing.JPanel();
        lblAboutUsTitle = new javax.swing.JLabel();
        lblSnehalImage = new javax.swing.JLabel();
        lblPragyaImage = new javax.swing.JLabel();
        lblSumanImage = new javax.swing.JLabel();
        lblSuyeshImage = new javax.swing.JLabel();
        lblSnehalTitle = new javax.swing.JLabel();
        lblPragyaTitle = new javax.swing.JLabel();
        lblSuyeshTitle = new javax.swing.JLabel();
        lblSumanTitle = new javax.swing.JLabel();
        lblSnehalSub = new javax.swing.JLabel();
        lblPragyaSub = new javax.swing.JLabel();
        lblSuyeshSub = new javax.swing.JLabel();
        lblSumanSub = new javax.swing.JLabel();
        lblContactUs = new javax.swing.JLabel();
        lblContactPart1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlIndustrySolution = new javax.swing.JPanel();
        txtSolutionTitle = new javax.swing.JLabel();
        txtSolutionSubHeading = new javax.swing.JLabel();
        txtServiceTitle = new javax.swing.JLabel();
        txtServiceContact = new javax.swing.JLabel();
        txtServiceList = new javax.swing.JLabel();
        txtServiceLists = new javax.swing.JLabel();
        txtSolutionImage = new javax.swing.JLabel();
        pnlLoginScreen = new javax.swing.JPanel();
        lblLoginError = new javax.swing.JLabel();
        txtFldLoginUsername = new javax.swing.JTextField();
        pwdFldLogin = new javax.swing.JPasswordField();
        lblLoginForgotPwd = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        lblLoginImage = new javax.swing.JLabel();
        pnlLoadingScreen = new javax.swing.JPanel();
        pgBarSplashScreen = new javax.swing.JProgressBar(0,100);
        lblLoading = new javax.swing.JLabel();
        lblLoadingImage = new javax.swing.JLabel();

        pnlMainScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlMainScreen.setMaximumSize(new java.awt.Dimension(1130, 714));
        pnlMainScreen.setMinimumSize(new java.awt.Dimension(1130, 714));
        pnlMainScreen.setPreferredSize(new java.awt.Dimension(1130, 714));
        pnlMainScreen.setSize(new java.awt.Dimension(1130, 714));

        pnlMainBar.setBackground(new java.awt.Color(163, 204, 212));

        lblMainBarSlogan.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        lblMainBarSlogan.setText("Simplifying Contracts for People and Businesses");

        lblMainBarLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/Contract logo.jpeg"))); // NOI18N

        btnLogout.setBackground(new java.awt.Color(51, 153, 255));
        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainBarLayout = new javax.swing.GroupLayout(pnlMainBar);
        pnlMainBar.setLayout(pnlMainBarLayout);
        pnlMainBarLayout.setHorizontalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblMainBarLogo)
                .addGap(47, 47, 47)
                .addComponent(lblMainBarSlogan, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlMainBarLayout.setVerticalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMainBarLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMainBarSlogan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlSolution.setBackground(new java.awt.Color(255, 255, 255));
        pnlSolution.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32), 0));
        pnlSolution.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        pnlHome.setBackground(new java.awt.Color(173, 193, 194));
        pnlHome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32), 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/home.png"))); // NOI18N

        lblHomeText1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblHomeText1.setText("<html>Next-level<br> contract<br> management <br>solutions</html>");

        btnLearnMore1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLearnMore1.setText("Learn more");
        btnLearnMore1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLearnMore1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHomeText1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlHomeLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnLearnMore1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHomeLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(lblHomeText1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLearnMore1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHomeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1334, Short.MAX_VALUE))
        );

        pnlSolution.addTab("Home", pnlHome);

        pnlContractList.setBackground(new java.awt.Color(204, 204, 204));

        tblContract.setBackground(new java.awt.Color(255, 204, 204));
        tblContract.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ContractID", "Title", "Type", "Term", "Status", "Start Date", "Drafted By", "Contact Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblContract.setGridColor(new java.awt.Color(0, 0, 0));
        tblContract.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblContract.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblContract.setShowGrid(true);
        tblContract.getTableHeader().setReorderingAllowed(false);
        tblContract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblContractMouseClicked(evt);
            }
        });
        spTblContract.setViewportView(tblContract);
        if (tblContract.getColumnModel().getColumnCount() > 0) {
            tblContract.getColumnModel().getColumn(0).setResizable(false);
            tblContract.getColumnModel().getColumn(1).setResizable(false);
            tblContract.getColumnModel().getColumn(2).setResizable(false);
            tblContract.getColumnModel().getColumn(3).setResizable(false);
            tblContract.getColumnModel().getColumn(4).setResizable(false);
            tblContract.getColumnModel().getColumn(4).setPreferredWidth(40);
            tblContract.getColumnModel().getColumn(5).setResizable(false);
            tblContract.getColumnModel().getColumn(6).setResizable(false);
            tblContract.getColumnModel().getColumn(7).setResizable(false);
        }

        lblTblContractTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblTblContractTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTblContractTitle.setForeground(new java.awt.Color(102, 102, 102));
        lblTblContractTitle.setText("Contract Information");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive", "Pending", "Terminated" }));
        cmbStatus.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Status", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        cmbStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusActionPerformed(evt);
            }
        });

        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NDA", "Lease", "Employment", "Vendor" }));
        cmbType.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        cmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTypeActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(102, 204, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(102, 204, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 153, 153));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 153, 153));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        txtContractId.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ContractID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        txtContractId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContractIdActionPerformed(evt);
            }
        });

        txtTitle.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Title", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        txtTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTitleActionPerformed(evt);
            }
        });

        txtTerm.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Term(month)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        txtTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTermActionPerformed(evt);
            }
        });

        txtDraftedBy.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Drafted By", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        txtDraftedBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDraftedByActionPerformed(evt);
            }
        });

        txtStartDate.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Start Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        txtStartDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStartDateActionPerformed(evt);
            }
        });

        txtContactNo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact No", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 13), new java.awt.Color(0, 153, 153))); // NOI18N
        txtContactNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactNoActionPerformed(evt);
            }
        });

        cmbSortBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose", "Contract ID", "Title", "Drafted By" }));
        cmbSortBy.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sort By", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(0, 204, 204))); // NOI18N
        cmbSortBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSortByActionPerformed(evt);
            }
        });

        cmbSelectionSortingOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ascending", "Descending" }));
        cmbSelectionSortingOrder.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Sorting Order", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(0, 204, 204))); // NOI18N

        btnSorting.setBackground(new java.awt.Color(255, 153, 153));
        btnSorting.setText("Sort");
        btnSorting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortingActionPerformed(evt);
            }
        });

        txtSearchValue.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter a value", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        btnSearching.setBackground(new java.awt.Color(255, 153, 153));
        btnSearching.setText("Search");
        btnSearching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlContractListLayout = new javax.swing.GroupLayout(pnlContractList);
        pnlContractList.setLayout(pnlContractListLayout);
        pnlContractListLayout.setHorizontalGroup(
            pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContractListLayout.createSequentialGroup()
                .addContainerGap(2, Short.MAX_VALUE)
                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlContractListLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(spTblContract, javax.swing.GroupLayout.PREFERRED_SIZE, 1026, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlContractListLayout.createSequentialGroup()
                                .addComponent(lblTblContractTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(187, 187, 187)
                                .addComponent(cmbSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(cmbSelectionSortingOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(txtSearchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContractListLayout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlContractListLayout.createSequentialGroup()
                                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addComponent(txtContractId, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDraftedBy, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(62, 62, 62)
                                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(116, 116, 116))
                            .addGroup(pnlContractListLayout.createSequentialGroup()
                                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlContractListLayout.createSequentialGroup()
                                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlContractListLayout.createSequentialGroup()
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlContractListLayout.createSequentialGroup()
                                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53)
                                        .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlContractListLayout.createSequentialGroup()
                                        .addGap(161, 161, 161)
                                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(201, 201, 201))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContractListLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSorting)
                .addGap(225, 225, 225)
                .addComponent(btnSearching)
                .addGap(154, 154, 154))
        );
        pnlContractListLayout.setVerticalGroup(
            pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContractListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSorting)
                    .addComponent(btnSearching, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(14, 14, 14)
                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTblContractTitle)
                        .addComponent(cmbSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbSelectionSortingOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSearchValue, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(spTblContract, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContractListLayout.createSequentialGroup()
                        .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtContractId, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContractListLayout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)))
                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContractListLayout.createSequentialGroup()
                        .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlContractListLayout.createSequentialGroup()
                        .addGroup(pnlContractListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDraftedBy, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))))
        );

        pnlSolution.addTab("Dashboard", pnlContractList);

        pnlAboutUs.setBackground(new java.awt.Color(204, 204, 204));
        pnlAboutUs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32), 0));

        lblAboutUsTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblAboutUsTitle.setText("Our Team");

        lblSnehalImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/snehal.jpeg"))); // NOI18N

        lblPragyaImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/pragya.jpeg"))); // NOI18N

        lblSumanImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/suman.jpeg"))); // NOI18N

        lblSuyeshImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/suyesh.jpeg"))); // NOI18N

        lblSnehalTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblSnehalTitle.setText("Snehal Subedi");

        lblPragyaTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblPragyaTitle.setText("Pragya Rayamajhi");

        lblSuyeshTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblSuyeshTitle.setText("Suyesh Neupane");

        lblSumanTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblSumanTitle.setText("Suman Lama");

        lblSnehalSub.setText("Founder");

        lblPragyaSub.setText("Managing Director");

        lblSuyeshSub.setText("CEO");

        lblSumanSub.setText("CTO");

        lblContactUs.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblContactUs.setText("Contact Us");

        lblContactPart1.setText("<html>Agile Contracts <br>\nPrayag complex, Gyaneshwor <br>\nKathmandu, 44600</html>");

        jLabel2.setText("<html>Tel. +977-9841822176<br>\nEmail: agilecontracts@gmail.com<br>\nSocial: @agilecontracts</html>");

        javax.swing.GroupLayout pnlAboutUsLayout = new javax.swing.GroupLayout(pnlAboutUs);
        pnlAboutUs.setLayout(pnlAboutUsLayout);
        pnlAboutUsLayout.setHorizontalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addContainerGap(59, Short.MAX_VALUE)
                        .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                                .addComponent(lblSnehalTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPragyaTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                                .addComponent(lblSnehalImage, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(lblPragyaImage))))
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(lblContactUs, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblContactPart1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSuyeshImage, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101))
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSuyeshTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)))
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSumanImage, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSumanTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(135, 135, 135))
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(447, 447, 447)
                        .addComponent(lblAboutUsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(lblSnehalSub, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(166, 166, 166)
                        .addComponent(lblPragyaSub, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(193, 193, 193)
                        .addComponent(lblSuyeshSub, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)
                        .addComponent(lblSumanSub, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAboutUsLayout.setVerticalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(lblAboutUsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblContactUs, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblContactPart1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))
                    .addGroup(pnlAboutUsLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblPragyaImage, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSnehalImage, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSuyeshImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblSumanImage, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSnehalTitle)
                            .addComponent(lblPragyaTitle)
                            .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblSuyeshTitle)
                                .addComponent(lblSumanTitle)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSnehalSub)
                            .addComponent(lblPragyaSub)
                            .addComponent(lblSuyeshSub)
                            .addComponent(lblSumanSub))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1328, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );

        pnlSolution.addTab("About Us", pnlAboutUs);

        pnlIndustrySolution.setBackground(new java.awt.Color(204, 204, 204));

        txtSolutionTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 29)); // NOI18N
        txtSolutionTitle.setText("<html>Solutions<br>\ndesigned for you</html>");

        txtSolutionSubHeading.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        txtSolutionSubHeading.setText("<html>\"At Agile Contracts, based in the heart of Kathmandu and, <br>\n established in 2007, we bring over a decade of expertise in<br>\n simplifying contract management. Our innovative system<br>\n streamlines the creation, tracking, and execution of contracts,<br>\n empowering both organizations and individuals to enhance <br>\n efficiency and ensure compliance. With a strong foundation <br>\n built on years of experience, a commitment to excellence,<br>\n and an adaptable approach, Agile Contracts is your trusted<br>\n partner for managing agreements seamlessly and effectively.\"</html>");

        txtServiceTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        txtServiceTitle.setText("Our Services and Product Offerings :");

        txtServiceContact.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtServiceContact.setText("<html>- Real Estate Contracts <br>\n- Employment Contracts<br>\n- Lease Agreements</html>");

        txtServiceList.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtServiceList.setText("<html>- Service Contracts<br>\n- Vendor Contracts<br>\n- Partnership Agreements</html>");

        txtServiceLists.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        txtServiceLists.setText("<html>- Franchise Agreements<br>\n- Non-Disclosure Agreements<br>\n- Joint Venture Agreements</html>");

        txtSolutionImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/Service.jpeg"))); // NOI18N
        txtSolutionImage.setText("jLabel3");

        javax.swing.GroupLayout pnlIndustrySolutionLayout = new javax.swing.GroupLayout(pnlIndustrySolution);
        pnlIndustrySolution.setLayout(pnlIndustrySolutionLayout);
        pnlIndustrySolutionLayout.setHorizontalGroup(
            pnlIndustrySolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIndustrySolutionLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnlIndustrySolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtServiceTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSolutionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlIndustrySolutionLayout.createSequentialGroup()
                        .addGroup(pnlIndustrySolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlIndustrySolutionLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(txtServiceContact, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(130, 130, 130)
                                .addComponent(txtServiceList))
                            .addComponent(txtSolutionSubHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlIndustrySolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlIndustrySolutionLayout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(txtServiceLists, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlIndustrySolutionLayout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(txtSolutionImage, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        pnlIndustrySolutionLayout.setVerticalGroup(
            pnlIndustrySolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIndustrySolutionLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(txtSolutionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlIndustrySolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSolutionImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSolutionSubHeading, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addComponent(txtServiceTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlIndustrySolutionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtServiceContact, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtServiceList, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtServiceLists, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1280, Short.MAX_VALUE))
        );

        pnlSolution.addTab("Industry Solution", pnlIndustrySolution);

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlSolution)
                .addContainerGap())
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addComponent(pnlMainBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSolution))
        );

        pnlLoginScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoginScreen.setMaximumSize(new java.awt.Dimension(1130, 714));
        pnlLoginScreen.setMinimumSize(new java.awt.Dimension(1130, 714));
        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(1130, 714));
        pnlLoginScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLoginError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginError.setForeground(new java.awt.Color(255, 0, 0));
        lblLoginError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlLoginScreen.add(lblLoginError, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 500, 450, 21));

        txtFldLoginUsername.setBackground(new java.awt.Color(223, 208, 183));
        txtFldLoginUsername.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32), 0), "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        pnlLoginScreen.add(txtFldLoginUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, 262, 59));

        pwdFldLogin.setBackground(new java.awt.Color(223, 208, 183));
        pwdFldLogin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32), 0), "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        pnlLoginScreen.add(pwdFldLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 410, 262, 59));

        lblLoginForgotPwd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginForgotPwd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginForgotPwd.setText("Forgot your password?");
        pnlLoginScreen.add(lblLoginForgotPwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 530, 464, -1));

        btnLogin.setBackground(new java.awt.Color(50, 59, 125));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        pnlLoginScreen.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 560, 260, 50));

        lblLoginImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/loginImage1.png"))); // NOI18N
        pnlLoginScreen.add(lblLoginImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, 710));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1130, 714));
        setResizable(false);
        setSize(new java.awt.Dimension(1130, 714));

        pnlLoadingScreen.setBackground(new java.awt.Color(225, 248, 220));
        pnlLoadingScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pgBarSplashScreen.setStringPainted(true);
        pgBarSplashScreen.setForeground(new java.awt.Color(0, 0, 0));
        pnlLoadingScreen.add(pgBarSplashScreen, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 790, 31));

        lblLoading.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoading.setText("Loading...");
        pnlLoadingScreen.add(lblLoading, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, 95, 30));

        lblLoadingImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/loadingImg.png"))); // NOI18N
        pnlLoadingScreen.add(lblLoadingImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(-110, 80, 980, 470));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Initializes the layout of the application by setting up the CardLayout
     * and adding panels for different screens. Each panel is uniquely
     * identified for easy navigation between screens.
     */
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }

    /**
     * Initializes the application's data, including the contract list and
     * table. Populates the contract list with sample data for demonstration
     * purposes.
     */
    private void initializeData() {
        contractList = new LinkedList<>();

        // Create a table model with updated column names
        DefaultTableModel model = new DefaultTableModel(
                new Object[][]{}, // No initial data
                new String[]{ // Updated column names
                    "Contract ID", "Title", "Type", "Term (months)", "Status", "Start Date", "Drafted By", "Contact No"
                }
        );
        tblContract.setModel(model);

        // Example data for the updated table
        registerContract(new ContractModel(10001, "Snehals company", "NDA", 24, "Active", "02-08-2024", "Suman Lama", "9803729956"));
        registerContract(new ContractModel(10002, "TechHub Solutions", "NDA", 22, "Active", "15-08-2024", "Ravi Kumar", "9803123456"));
        registerContract(new ContractModel(10003, "Innovative Minds", "NDA", 25, "Active", "10-09-2024", "Priya Sharma", "9812345678"));
        registerContract(new ContractModel(10004, "Alpha Coders", "NDA", 23, "Active", "18-07-2024", "Ankit Singh", "9823456789"));
        registerContract(new ContractModel(10005, "Creative Creations", "NDA", 26, "Active", "12-06-2024", "Neha Verma", "9804567890"));
        registerContract(new ContractModel(10006, "SmartTech Labs", "NDA", 24, "Active", "20-10-2024", "Karan Joshi", "9815678901"));
        registerContract(new ContractModel(10007, "Bright Future Academy", "NDA", 21, "Active", "25-05-2024", "Sneha Patel", "9826789012"));
        registerContract(new ContractModel(10008, "Global Learners", "NDA", 27, "Active", "30-04-2024", "Amit Das", "9837890123"));

    }

    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashScreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }

    // Method to add contract data and populate the table
    private void registerContract(ContractModel contract) {
        contractList.add(contract);
        DefaultTableModel model = (DefaultTableModel) tblContract.getModel();
        model.addRow(new Object[]{
            contract.getContractId(), contract.getTitle(), contract.getType(),
            contract.getTerm(), contract.getStatus(), contract.getStartDate(),
            contract.getDraftedBy(), contract.getContactNo()
        });
    }

//    private Boolean updateStudent(ContractModel student){
//        
//    }
//    
//    private Boolean deleteStudent(int lmuId){
//        
//    }
//
//    private ContractModel createStudentModel(......){
//        
//    }
//    
//    private void clearForm(){
//        
//    }
//    
//    private void loadStudentListToTable(){
//        
//    }
    /**
     * Switches the application screen to the specified screen name.
     *
     * @param screenName The name of the screen to display.
     */
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }

    /**
     * Handles the logout button action. Clears the login fields and switches
     * back to the login screen.
     *
     * @param evt The action event triggered by the logout button.
     */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        pwdFldLogin.setText("");
        txtFldLoginUsername.setText("");
        loadScreen("LoginScreen"); // Load the main screen
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // Get the username and password input
        String username = txtFldLoginUsername.getText();
        String password = new String(pwdFldLogin.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            lblLoginError.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("admin") || !password.equals("admin")) {
            lblLoginError.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            lblLoginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblContract.getSelectedRow();
        if (selectedRow != -1) {
            String contractId = txtContractId.getText();
            String title = txtTitle.getText();
            String type = cmbType.getSelectedItem().toString();
            String term = txtTerm.getText();
            String status = cmbStatus.getSelectedItem().toString();
            String startDate = txtStartDate.getText();
            String draftedBy = txtDraftedBy.getText();
            String contactNo = txtContactNo.getText();

            if (ValidationUtil.isValidContractId(contractId, lblError)
                    && ValidationUtil.isValidTitle(title, lblError)
                    && ValidationUtil.isValidType(type, lblError)
                    && ValidationUtil.isValidTerm(term, lblError)
                    && ValidationUtil.isValidStatus(status, lblError)
                    && ValidationUtil.isValidStartDate(startDate, lblError)
                    && ValidationUtil.isValidDraftBy(draftedBy, lblError)
                    && ValidationUtil.isValidContactNo(contactNo, lblError)) {

                tblContract.setValueAt(contractId, selectedRow, 0);
                tblContract.setValueAt(title, selectedRow, 1);
                tblContract.setValueAt(type, selectedRow, 2);
                tblContract.setValueAt(term, selectedRow, 3);
                tblContract.setValueAt(status, selectedRow, 4);
                tblContract.setValueAt(startDate, selectedRow, 5);
                tblContract.setValueAt(draftedBy, selectedRow, 6);
                tblContract.setValueAt(contactNo, selectedRow, 7);

                contractList.set(selectedRow, new ContractModel(Integer.parseInt(contractId), title, type, Double.parseDouble(term), status, startDate, draftedBy, contactNo));

                JOptionPane.showMessageDialog(this, "Contract updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

            } else {
                JOptionPane.showMessageDialog(this, "Please enter valid data.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a contract to update.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cmbStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbStatusActionPerformed

    private void txtContractIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContractIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContractIdActionPerformed

    private void txtTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTitleActionPerformed

    private void txtTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTermActionPerformed

    private boolean isContractIdExists(int contractId) {
        // Replace 'contractList' with the actual list or database storing drone data
        for (ContractModel drone : contractList) {
            if (drone.getContractId() == contractId) {
                return true; // Drone ID already exists
            }
        }
        return false; // Contract ID is unique
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        // Get the input data from the UI fields
        String contractId = txtContractId.getText();
        String title = txtTitle.getText();
        String type = cmbType.getSelectedItem().toString(); // For JComboBox
        String term = txtTerm.getText();
        String status = cmbStatus.getSelectedItem().toString(); // For JComboBox
        String startDate = txtStartDate.getText();
        String draftedBy = txtDraftedBy.getText();
        String contactNo = txtContactNo.getText();

        // Validate the inputs using the ValidationUtil methods
        if (ValidationUtil.isValidContractId(contractId, lblError)
                && ValidationUtil.isValidTitle(title, lblError)
                && ValidationUtil.isValidType(type, lblError)
                && ValidationUtil.isValidTerm(term, lblError)
                && ValidationUtil.isValidStatus(status, lblError)
                && ValidationUtil.isValidStartDate(startDate, lblError)
                && ValidationUtil.isValidDraftBy(draftedBy, lblError)
                && ValidationUtil.isValidContactNo(contactNo, lblError)) {

            int contractIdValue = Integer.parseInt(contractId); // Convert contractId from String to int
            if (isContractIdExists(contractIdValue)) { // Call the method to check duplicate IDs
                JOptionPane.showMessageDialog(this,
                        "Contract ID " + contractId + " already exists and cannot be added!",
                        "Duplicate Entry",
                        JOptionPane.ERROR_MESSAGE);
            } else {

                // If all fields are valid, create a new ContractModel
                double termValue = Double.parseDouble(term); // Convert term from String to double

                // Create a new instance of your model class (ContractModel)
                ContractModel contract = new ContractModel(contractIdValue, title, type, termValue, status, startDate, draftedBy, contactNo);

                // Call your method to register or update the contract
                registerContract(contract);

                // Show a success message dialog
                JOptionPane.showMessageDialog(this, "Your data has been successfully updated.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            // If validation fails, lblError will display the appropriate message
            JOptionPane.showMessageDialog(this, "Please enter valid data for all fields.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        // Get the Contract ID from the text field

        int selectedRow = tblContract.getSelectedRow(); // Get selected row

        if (selectedRow != -1) { // Check if a row is selected
            // Remove data from the contractList
            contractList.remove(selectedRow);

            // Remove data from the table
            DefaultTableModel model = (DefaultTableModel) tblContract.getModel();
            model.removeRow(selectedRow);

            lblError.setText("Contract removed successfully.");
            lblError.setForeground(Color.BLUE);
        } else {
            lblError.setText("No Contract selected for removal!");
            lblError.setForeground(Color.RED);
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtContractId.setText("");
        txtTitle.setText("");
        cmbType.setSelectedIndex(0);
        txtTerm.setText("");
        cmbStatus.setSelectedIndex(0);
        txtStartDate.setText("");
        txtDraftedBy.setText("");
        txtContactNo.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblContractMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblContractMouseClicked
        // TODO add your handling code here:
        tblContract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int selectedRow = tblContract.getSelectedRow();
                if (selectedRow != -1) {
                    txtContractId.setText(tblContract.getValueAt(selectedRow, 0).toString());
                    txtTitle.setText(tblContract.getValueAt(selectedRow, 1).toString());
                    cmbType.setSelectedItem(tblContract.getValueAt(selectedRow, 2).toString());
                    txtTerm.setText(tblContract.getValueAt(selectedRow, 3).toString());
                    cmbStatus.setSelectedItem(tblContract.getValueAt(selectedRow, 4).toString());
                    txtStartDate.setText(tblContract.getValueAt(selectedRow, 5).toString());
                    txtDraftedBy.setText(tblContract.getValueAt(selectedRow, 6).toString());
                    txtContactNo.setText(tblContract.getValueAt(selectedRow, 7).toString());
                }
            }
        });

    }//GEN-LAST:event_tblContractMouseClicked


    private void btnLearnMore1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLearnMore1ActionPerformed
        // TODO add your handling code here:
        pnlSolution.setSelectedComponent(pnlIndustrySolution);
    }//GEN-LAST:event_btnLearnMore1ActionPerformed

    private void cmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTypeActionPerformed

    private void txtDraftedByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDraftedByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDraftedByActionPerformed

    private void txtStartDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStartDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartDateActionPerformed

    private void txtContactNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactNoActionPerformed

    private void btnSortingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortingActionPerformed
        // TODO add your handling code here:
        // Retrieve the selected field and sorting order from combo boxes
        String selectedField = cmbSortBy.getSelectedItem().toString();  // For selecting Drone ID, ItemName, or Location
        String selectedOrder = cmbSelectionSortingOrder.getSelectedItem().toString();  // For selecting Ascending/Descending

        // Check if a valid field is selected
        if (selectedField.equals("Select Field")) {
            JOptionPane.showMessageDialog(this, "Please select a valid field for sorting (contract id, type, or drafted by).", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit if no field is selected
        }

        // Determine the sort order: true for descending, false for ascending
        boolean isDesc = selectedOrder.equals("Descending");

        // Initialize the sorted list variable
        List<ContractModel> sortedList = null;

        // Sort the data based on the selected field
        if (selectedField.equals("Contract ID")) {
            // Use SelectionSort for Drone ID
            SelectionSort selectionSort = new SelectionSort();
            sortedList = selectionSort.sortByContractId(contractList, isDesc);
        } else if (selectedField.equals("Title")) {
            // Use InsertionSort for ItemName
            InsertionSort insertionSort = new InsertionSort();
            sortedList = insertionSort.sortByTitleName(contractList, isDesc);
        } else if (selectedField.equals("Drafted By")) {
            // Use MergeSort for Location
            MergeSort mergeSort = new MergeSort();
            sortedList = mergeSort.sortByDraftedBy(contractList, isDesc);
        }

        // Check if sortedList is not null before loading it into the table
        if (sortedList != null && !sortedList.isEmpty()) {
            loadListToTable(sortedList);
        } else {
            JOptionPane.showMessageDialog(this, "No data available for sorting.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSortingActionPerformed

    private void cmbSortByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSortByActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSortByActionPerformed

    private void btnSearchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchingActionPerformed
        // TODO add your handling code here:
        // Get user inputs
        String searchValue = txtSearchValue.getText().trim();
        String selectedColumn = "Contract ID";

        // Validate input
        if (searchValue.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter a value to search.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        BinarySearch binarySearch = new BinarySearch();
        // Sort the drone list based on the selected column
        sortContractList(selectedColumn);

        // Perform binary search
        ContractModel result = binarySearch.searchByField(searchValue, selectedColumn, contractList, 0, contractList.size() - 1);

        // Display result
        showSearchResult(result);
    }//GEN-LAST:event_btnSearchingActionPerformed

    private void sortContractList(String selectedColumn) {
        // Sorting based on selected column
//        if (selectedColumn.equals("Drone ID")) {
//            droneList.sort(Comparator.comparingInt(DroneModel::getDroneId)); // Sort by Drone ID
            
        SelectionSort selectionSort = new SelectionSort();
        if (selectedColumn.equals("Drone ID")) {
            // Sort in Ascending order
            boolean isDesc = false;
            // Sort the droneList using SelectionSort
            contractList = selectionSort.sortByContractId(contractList, isDesc);
            
        } 
    }
    
    
    // Display search results
    public void showSearchResult(ContractModel result) {
        if (result == null) {
            JOptionPane.showMessageDialog(null, "No matching record found.", "Search Result", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        // Column names
        String[] columnNames = {"Contract ID", "Title", "Type", "Term", "Status", "StartDate", "DraftedBy", "ContactNo"};

        // Data for table
        Object[][] data = {
            {result.getContractId(), result.getTitle(), result.getType(), result.getTerm(), result.getStatus(), result.getStartDate(), result.getDraftedBy(), result.getContactNo()}
        };

        // Table model
        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
        JTable table = new JTable(tableModel);

        // Scroll pane
        JScrollPane scrollPane = new JScrollPane(table);
        scrollPane.setPreferredSize(new Dimension(1000, 300));

        // Dialog box
        JOptionPane optionPane = new JOptionPane(scrollPane, JOptionPane.INFORMATION_MESSAGE, JOptionPane.DEFAULT_OPTION);
        JDialog dialog = optionPane.createDialog(null, "Search Result");
        dialog.setSize(1000, 300);
        dialog.setVisible(true);
    }


    
    
    
    private void loadListToTable(List<ContractModel> studentList) {
        DefaultTableModel model = (DefaultTableModel) tblContract.getModel();

        //clear existing rows if needed
        model.setRowCount(0);

        //populate the table with drone data
        studentList.forEach(drone -> model.addRow(new Object[]{
            drone.getContractId(),
            drone.getTitle(),
            drone.getType(),
            drone.getTerm(),
            drone.getStatus(),
            drone.getStartDate(),
            drone.getDraftedBy(),
            drone.getContactNo()
        }));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContractApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContractApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContractApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContractApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        ContractApp app = new ContractApp();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            app.setVisible(true);
        });

        app.startProgress();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLearnMore1;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSearching;
    private javax.swing.JButton btnSorting;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbSelectionSortingOrder;
    private javax.swing.JComboBox<String> cmbSortBy;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JComboBox<String> cmbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAboutUsTitle;
    private javax.swing.JLabel lblContactPart1;
    private javax.swing.JLabel lblContactUs;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblHomeText1;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoadingImage;
    private javax.swing.JLabel lblLoginError;
    private javax.swing.JLabel lblLoginForgotPwd;
    private javax.swing.JLabel lblLoginImage;
    private javax.swing.JLabel lblMainBarLogo;
    private javax.swing.JLabel lblMainBarSlogan;
    private javax.swing.JLabel lblPragyaImage;
    private javax.swing.JLabel lblPragyaSub;
    private javax.swing.JLabel lblPragyaTitle;
    private javax.swing.JLabel lblSnehalImage;
    private javax.swing.JLabel lblSnehalSub;
    private javax.swing.JLabel lblSnehalTitle;
    private javax.swing.JLabel lblSumanImage;
    private javax.swing.JLabel lblSumanSub;
    private javax.swing.JLabel lblSumanTitle;
    private javax.swing.JLabel lblSuyeshImage;
    private javax.swing.JLabel lblSuyeshSub;
    private javax.swing.JLabel lblSuyeshTitle;
    private javax.swing.JLabel lblTblContractTitle;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlContractList;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlIndustrySolution;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlMainBar;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JTabbedPane pnlSolution;
    private javax.swing.JPasswordField pwdFldLogin;
    private javax.swing.JScrollPane spTblContract;
    private javax.swing.JTable tblContract;
    private javax.swing.JTextField txtContactNo;
    private javax.swing.JTextField txtContractId;
    private javax.swing.JTextField txtDraftedBy;
    private javax.swing.JTextField txtFldLoginUsername;
    private javax.swing.JTextField txtSearchValue;
    private javax.swing.JLabel txtServiceContact;
    private javax.swing.JLabel txtServiceList;
    private javax.swing.JLabel txtServiceLists;
    private javax.swing.JLabel txtServiceTitle;
    private javax.swing.JLabel txtSolutionImage;
    private javax.swing.JLabel txtSolutionSubHeading;
    private javax.swing.JLabel txtSolutionTitle;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTerm;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
